// RECURSIVE DIGIT SUM - SOLUTION PRPGRAM

#include <stdio.h>
#include <string.h>

// Helper to recursively compute the super digit of a number
long superDigit(long x) {
    if (x < 10) return x;
    long sum = 0;
    while (x) {
        sum += x % 10;
        x /= 10;
    }
    return superDigit(sum);
}

int main() {
    char n[100005];
    int k;
    scanf("%s %d", n, &k);

    // Compute the sum of digits of n (as n can be huge)
    long sum = 0;
    for (int i = 0; n[i]; i++)
        sum += (n[i] - '0');
    
    // The initial sum is sum*k
    long total = sum * k;

    // Now compute super digit
    printf("%ld\n", superDigit(total));
    return 0;
}
