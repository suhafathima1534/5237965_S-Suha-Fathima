#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
}


#include <stdio.h>

// Checks if a given year is a leap year
int isLeap(int y) {
    return (y % 400 == 0) || (y % 100 != 0 && y % 4 == 0);
}

int daysInMonth(int m, int y) {
    int days[] = {31,28,31,30,31,30,31,31,30,31,30,31};
    if (m == 2 && isLeap(y)) return 29;
    return days[m-1];
}

// Returns 1 if x is lucky, i.e., divisible by 4 or 7
int isLucky(int x) {
    return (x % 4 == 0) || (x % 7 == 0);
}

// Increments the date by one day (modifies d, m, y in place)
void nextDate(int *d, int *m, int *y) {
    (*d)++;
    if (*d > daysInMonth(*m, *y)) {
        *d = 1;
        (*m)++;
        if (*m > 12) {
            *m = 1;
            (*y)++;
        }
    }
}

// Reads dd-mm-yyyy and fills d, m, y
void parseDate(const char *s, int *d, int *m, int *y) {
    sscanf(s, "%2d-%2d-%4d", d, m, y);
}

int cmpDate(int d1, int m1, int y1, int d2, int m2, int y2) {
    if (y1 != y2) return y1 - y2;
    if (m1 != m2) return m1 - m2;
    return d1 - d2;
}

int main() {
    char u[15], v;
    scanf("%s %s", u, v);

    int d1, m1, y1, d2, m2, y2;
    parseDate(u, &d1, &m1, &y1);
    parseDate(v, &d2, &m2, &y2);

    int count = 0;
    while (1) {
        // Concatenate day, month, year (no leading zeros)
        int x = d1 * 1000000 + m1 * 10000 + y1; // ddmmyyyy as integer
        if (isLucky(x)) count++;
        if (d1 == d2 && m1 == m2 && y1 == y2) break;
        nextDate(&d1, &m1, &y1);
    }
    printf("%d\n", count);
    return 0;
}
