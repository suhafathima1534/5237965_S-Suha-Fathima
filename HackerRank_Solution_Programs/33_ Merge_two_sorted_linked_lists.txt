// Merge two sorted linked lists - Solution program

SinglyLinkedListNode* mergeLists(SinglyLinkedListNode* head1, SinglyLinkedListNode* head2) {
    if (head1 == NULL) return head2;
    if (head2 == NULL) return head1;

    SinglyLinkedListNode *head = NULL, *tail = NULL;

    // pick smaller head to start
    if (head1->data <= head2->data) {
        head = tail = head1;
        head1 = head1->next;
    } else {
        head = tail = head2;
        head2 = head2->next;
    }

    // merge remaining
    while (head1 && head2) {
        if (head1->data <= head2->data) {
            tail->next = head1;
            head1 = head1->next;
        } else {
            tail->next = head2;
            head2 = head2->next;
        }
        tail = tail->next;
    }

    // attach leftover
    if (head1) tail->next = head1;
    else tail->next = head2;

    return head;
}
