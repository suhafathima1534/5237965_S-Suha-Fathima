// Queue using Two Stacks - Solution program

#include <stdio.h>

#define MAX 100000

int s1[MAX], s2[MAX];
int top1 = -1, top2 = -1;

void push1(int x) { s1[++top1] = x; }
int pop1() { return s1[top1--]; }
int empty1() { return top1 == -1; }

void push2(int x) { s2[++top2] = x; }
int pop2() { return s2[top2--]; }
int peek2() { return s2[top2]; }
int empty2() { return top2 == -1; }

void shift() {
    if (empty2()) {
        while (!empty1()) push2(pop1());
    }
}

void enqueue(int x) { push1(x); }
void dequeue() { shift(); if (!empty2()) pop2(); }
int front() { shift(); return peek2(); }

int main() {
    int q, type, x;
    scanf("%d", &q);
    while (q--) {
        scanf("%d", &type);
        if (type == 1) { scanf("%d", &x); enqueue(x); }
        else if (type == 2) dequeue();
        else if (type == 3) printf("%d\n", front());
    }
    return 0;
}
